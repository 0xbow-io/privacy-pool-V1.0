/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { PrivacyPool, PrivacyPoolInterface } from "../PrivacyPool";

const _abi = [
  {
    type: "function",
    name: "FIELD_SIZE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_EXT_AMOUNT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_FEE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROOT_HISTORY_SIZE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ZERO_VALUE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "__gap",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "calculatePublicAmount",
    inputs: [
      {
        name: "_extAmount",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "_fee",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "currentRootIndex",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "filledSubtrees",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLastRoot",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hashLeftRight",
    inputs: [
      {
        name: "_left",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_right",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasher",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IHasher",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isKnownRoot",
    inputs: [
      {
        name: "_root",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isSpent",
    inputs: [
      {
        name: "_nullifierHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "levels",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maximumDepositAmount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nextIndex",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nullifierHashes",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "roots",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transact",
    inputs: [
      {
        name: "_args",
        type: "tuple",
        internalType: "struct PrivacyPool.Proof",
        components: [
          {
            name: "proof",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "root",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "inputNullifiers",
            type: "bytes32[2]",
            internalType: "bytes32[2]",
          },
          {
            name: "outputCommitments",
            type: "bytes32[2]",
            internalType: "bytes32[2]",
          },
          {
            name: "publicAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "extDataHash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
      {
        name: "_extData",
        type: "tuple",
        internalType: "struct PrivacyPool.ExtData",
        components: [
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "extAmount",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "fee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "encryptedOutput1",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "encryptedOutput2",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "membershipProofURI",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "verifier2",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IVerifier",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verifyProof",
    inputs: [
      {
        name: "_args",
        type: "tuple",
        internalType: "struct PrivacyPool.Proof",
        components: [
          {
            name: "proof",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "root",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "inputNullifiers",
            type: "bytes32[2]",
            internalType: "bytes32[2]",
          },
          {
            name: "outputCommitments",
            type: "bytes32[2]",
            internalType: "bytes32[2]",
          },
          {
            name: "publicAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "extDataHash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "zeros",
    inputs: [
      {
        name: "i",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "NewCommitment",
    inputs: [
      {
        name: "commitment",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "index",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "encryptedOutput",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewNullifier",
    inputs: [
      {
        name: "nullifier",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewTxRecord",
    inputs: [
      {
        name: "inputNullifier1",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "inputNullifier2",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "outputCommitment1",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "outputCommitment2",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "publicAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "index",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewWithdrawal",
    inputs: [
      {
        name: "recipient",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "membershipProofURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "inputNullifiers",
        type: "bytes32[2]",
        indexed: false,
        internalType: "bytes32[2]",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
  },
] as const;

export class PrivacyPool__factory {
  static readonly abi = _abi;
  static createInterface(): PrivacyPoolInterface {
    return new Interface(_abi) as PrivacyPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PrivacyPool {
    return new Contract(address, _abi, runner) as unknown as PrivacyPool;
  }
}
